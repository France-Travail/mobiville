stages:
    - build-front-image
    - deploy-application-on-recette

build_front_image :
    stage: build-front-image
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    script:
      # On construit l'image docker du composant front et on la sauvegarde dans le registry gitlab
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      - /kaniko/executor --context $CI_PROJECT_DI --dockerfile $CI_PROJECT_DIR/dockerfile_front --destination $CI_REGISTRY_IMAGE:front

deploy_application_on_recette:
  stage: deploy-application-on-recette
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq openssh-client 
    # add SSH_PRIVATE_KEY in agent store
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
  script:
    #- ssh -o StrictHostKeyChecking=no gitlab@192.168.4.135:. 
    - scp -o StrictHostKeyChecking=no docker-compose.yml docker-compose.recette.yml gitlab@$IP_RECETTE:$WORKDIR_SERVER
    - ssh -o StrictHostKeyChecking=no gitlab@$IP_RECETTE "
                cd $WORKDIR_SERVER && 
                docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD &&
                docker-compose -f docker-compose.yml -f docker-compose.recette.yml up -d"
    
