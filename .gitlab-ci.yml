stages:
  - build-front-image
  - deploy-front-into-recette
  - build-api-image
  - deploy-application-on-recette

build_front_image :
  stage: build-front-image
  image: node:12.18.0
  script:
    # On construit l'image docker du composant front et on la sauvegarde dans le registry gitlab
    - (which yarn || npm i -g yarn@1.15.2)
    - cd ./front
    - yarn install 
    - yarn run build && cp -RT build dist
  artifacts:
    paths:
      - ./front/dist 
  only: 
    - master

deploy_front_into_recette:
  stage: deploy-front-into-recette
  dependencies:
    - build_front_image
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq openssh-client 
    # add SSH_PRIVATE_KEY in agent store
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no gitlab@$IP_RECETTE "mkdir -p $WORKDIR_SERVER/nginx/front"
    # On récupère l'artifact du build et on l'envoie sur le serveur de recette
    - scp -o StrictHostKeyChecking=no -r ./front/dist gitlab@$IP_RECETTE:$WORKDIR_SERVER/nginx/front

build_api_image :
  stage: build-api-image
  image:
      name: gcr.io/kaniko-project/executor:debug
      entrypoint: [""]
  script:
    # On construit l'image docker du composant front et on la sauvegarde dans le registry gitlab
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/dockerfile_api --destination $CI_REGISTRY_IMAGE:api
  when: manual

deploy_application_on_recette:
  stage: deploy-application-on-recette
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq openssh-client 
    # add SSH_PRIVATE_KEY in agent store
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
  script:
    #- ssh -o StrictHostKeyChecking=no gitlab@192.168.4.135:. 
    - scp -o StrictHostKeyChecking=no docker-compose.yml docker-compose.recette.yml gitlab@$IP_RECETTE:$WORKDIR_SERVER
    - ssh -o StrictHostKeyChecking=no gitlab@$IP_RECETTE "mkdir -p $WORKDIR_SERVER/nginx"
    - scp -o StrictHostKeyChecking=no nginx/recette.conf gitlab@$IP_RECETTE:$WORKDIR_SERVER/nginx/
    - ssh -o StrictHostKeyChecking=no gitlab@$IP_RECETTE "
                cd $WORKDIR_SERVER && 
                docker-compose -f docker-compose.yml -f docker-compose.recette.yml stop && 
                docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD &&
                docker-compose -f docker-compose.yml -f docker-compose.recette.yml up -d"
  when: manual
            
    
    
